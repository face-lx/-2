/**
 * 创建学生类，实现Comparable接口
 */
public class Student implements Comparable<Student> {
  /**
   * 私有属性:学号，姓名，年龄
   */
  private Integer stuId;
  private String name;
  private Integer age;
  /**
   *构造方法
   */
  public Student() {
  }
  public Student(Integer stuId, String name, Integer age) {
    this.stuId = stuId;
    this.name = name;
    this.age = age;
  }
  /**
   * getter和setter方法
   */
  public Integer getStuId() {
    return stuId;
  }
  public void setStuId(Integer stuId) {
    this.stuId = stuId;
  }
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public Integer getAge() {
    return age;
  }
  public void setAge(Integer age) {
    this.age = age;
  }
  @Override
  public int compareTo(Student stu) {
    return this.age - stu.age;
  }
  public String toString(){
    return "Student [age = " + age + ",name = " + name +",stuId = " + stuId + "]";
  }
}
public class TestStudent {
  public static void main(String[] args) {
    Set<Student> stuSet = saveStudentInfo();
    outputInfo(stuSet);
  }
  private static Set<Student> saveStudentInfo() {
    Scanner input = new Scanner(System.in);
    /**
     * 创建TreeSet保存学生信息
     */
    Set<Student> stuSet = new TreeSet<Student>();
    while (true){
      /**
       * 输入提示
       */
      System.out.println("请输入学生信息（学号#姓名#年龄）");
      String inputData = input.nextLine();
      /**
       * 判断是否退出 inputData.equals("exit")
       */
      if ("exit".equals(inputData)){
        break;
      }
      /**
       * 把用户输入的学生信息分割为String[]
       */
      String [] info = inputData.split("#");
      /**
       * 将输入信息封装到Student对象中
       */
      Student stu = new Student(Integer.parseInt(info[0]),info[1],
        Integer.parseInt(info[2]));
      /**
       * 将学生对象加入集合
       */
      stuSet.add(stu);
    }
    return stuSet;
  }
  private static void outputInfo(Set<Student> stuSet){
    File file = new File("e:/student.txt");
    /**
     * 创建文件输出流对象
     */
    FileWriter fw = null;
    try {
      fw = new FileWriter(file);
      Iterator<Student> it = stuSet.iterator();
      while (it.hasNext()){
        String info = it.next().toString();
        /**
         * 将字符串写入记事本
         */
        fw.write(info);
        /**
         * 完成换行
         */
        fw.write("\r\n");
      }
    } catch (IOException e) {
      e.printStackTrace();
    }finally {
      try {
        fw.close();
      } catch (IOException e) {
        e.printStackTrace();
      }
    }
  }
}
